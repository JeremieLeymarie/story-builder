/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WhiteboardImport } from './routes/whiteboard'
import { Route as StoreImport } from './routes/store'
import { Route as IndexImport } from './routes/index'
import { Route as LibraryIndexImport } from './routes/library/index'
<<<<<<< HEAD
import { Route as LibraryStoryKeyImport } from './routes/library/$storyKey'
import { Route as BuilderStoriesImport } from './routes/builder/stories'
import { Route as BuilderStoryKeyImport } from './routes/builder/$storyKey'
import { Route as GameGameKeyIndexImport } from './routes/game/$gameKey/index'
import { Route as GameGameKeySceneKeyImport } from './routes/game/$gameKey/$sceneKey'
=======
import { Route as LibraryStoryIdImport } from './routes/library/$storyId'
import { Route as BuilderStoriesImport } from './routes/builder/stories'
import { Route as BuilderStoryIdImport } from './routes/builder/$storyId'
import { Route as GameGameIdIndexImport } from './routes/game/$gameId/index'
import { Route as GameGameIdSceneIdImport } from './routes/game/$gameId/$sceneId'
>>>>>>> 73f930e (:construction: Get synchronization data)

// Create/Update Routes

const WhiteboardRoute = WhiteboardImport.update({
  path: '/whiteboard',
  getParentRoute: () => rootRoute,
} as any)

const StoreRoute = StoreImport.update({
  path: '/store',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LibraryIndexRoute = LibraryIndexImport.update({
  path: '/library/',
  getParentRoute: () => rootRoute,
} as any)

<<<<<<< HEAD
const LibraryStoryKeyRoute = LibraryStoryKeyImport.update({
  path: '/library/$storyKey',
=======
const LibraryStoryIdRoute = LibraryStoryIdImport.update({
  path: '/library/$storyId',
>>>>>>> 73f930e (:construction: Get synchronization data)
  getParentRoute: () => rootRoute,
} as any)

const BuilderStoriesRoute = BuilderStoriesImport.update({
  path: '/builder/stories',
  getParentRoute: () => rootRoute,
} as any)

<<<<<<< HEAD
const BuilderStoryKeyRoute = BuilderStoryKeyImport.update({
  path: '/builder/$storyKey',
  getParentRoute: () => rootRoute,
} as any)

const GameGameKeyIndexRoute = GameGameKeyIndexImport.update({
  path: '/game/$gameKey/',
  getParentRoute: () => rootRoute,
} as any)

const GameGameKeySceneKeyRoute = GameGameKeySceneKeyImport.update({
  path: '/game/$gameKey/$sceneKey',
=======
const BuilderStoryIdRoute = BuilderStoryIdImport.update({
  path: '/builder/$storyId',
  getParentRoute: () => rootRoute,
} as any)

const GameGameIdIndexRoute = GameGameIdIndexImport.update({
  path: '/game/$gameId/',
  getParentRoute: () => rootRoute,
} as any)

const GameGameIdSceneIdRoute = GameGameIdSceneIdImport.update({
  path: '/game/$gameId/$sceneId',
>>>>>>> 73f930e (:construction: Get synchronization data)
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/store': {
      id: '/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreImport
      parentRoute: typeof rootRoute
    }
    '/whiteboard': {
      id: '/whiteboard'
      path: '/whiteboard'
      fullPath: '/whiteboard'
      preLoaderRoute: typeof WhiteboardImport
      parentRoute: typeof rootRoute
    }
<<<<<<< HEAD
    '/builder/$storyKey': {
      id: '/builder/$storyKey'
      path: '/builder/$storyKey'
      fullPath: '/builder/$storyKey'
      preLoaderRoute: typeof BuilderStoryKeyImport
=======
    '/builder/$storyId': {
      id: '/builder/$storyId'
      path: '/builder/$storyId'
      fullPath: '/builder/$storyId'
      preLoaderRoute: typeof BuilderStoryIdImport
>>>>>>> 73f930e (:construction: Get synchronization data)
      parentRoute: typeof rootRoute
    }
    '/builder/stories': {
      id: '/builder/stories'
      path: '/builder/stories'
      fullPath: '/builder/stories'
      preLoaderRoute: typeof BuilderStoriesImport
      parentRoute: typeof rootRoute
    }
<<<<<<< HEAD
    '/library/$storyKey': {
      id: '/library/$storyKey'
      path: '/library/$storyKey'
      fullPath: '/library/$storyKey'
      preLoaderRoute: typeof LibraryStoryKeyImport
=======
    '/library/$storyId': {
      id: '/library/$storyId'
      path: '/library/$storyId'
      fullPath: '/library/$storyId'
      preLoaderRoute: typeof LibraryStoryIdImport
>>>>>>> 73f930e (:construction: Get synchronization data)
      parentRoute: typeof rootRoute
    }
    '/library/': {
      id: '/library/'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryIndexImport
      parentRoute: typeof rootRoute
    }
<<<<<<< HEAD
    '/game/$gameKey/$sceneKey': {
      id: '/game/$gameKey/$sceneKey'
      path: '/game/$gameKey/$sceneKey'
      fullPath: '/game/$gameKey/$sceneKey'
      preLoaderRoute: typeof GameGameKeySceneKeyImport
      parentRoute: typeof rootRoute
    }
    '/game/$gameKey/': {
      id: '/game/$gameKey/'
      path: '/game/$gameKey'
      fullPath: '/game/$gameKey'
      preLoaderRoute: typeof GameGameKeyIndexImport
=======
    '/game/$gameId/$sceneId': {
      id: '/game/$gameId/$sceneId'
      path: '/game/$gameId/$sceneId'
      fullPath: '/game/$gameId/$sceneId'
      preLoaderRoute: typeof GameGameIdSceneIdImport
      parentRoute: typeof rootRoute
    }
    '/game/$gameId/': {
      id: '/game/$gameId/'
      path: '/game/$gameId'
      fullPath: '/game/$gameId'
      preLoaderRoute: typeof GameGameIdIndexImport
>>>>>>> 73f930e (:construction: Get synchronization data)
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  StoreRoute,
  WhiteboardRoute,
  BuilderStoryKeyRoute,
  BuilderStoriesRoute,
  LibraryStoryKeyRoute,
  LibraryIndexRoute,
<<<<<<< HEAD
  GameGameKeySceneKeyRoute,
  GameGameKeyIndexRoute,
=======
  GameGameIdSceneIdRoute,
  GameGameIdIndexRoute,
>>>>>>> 73f930e (:construction: Get synchronization data)
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/store",
        "/whiteboard",
        "/builder/$storyKey",
        "/builder/stories",
        "/library/$storyKey",
        "/library/",
        "/game/$gameKey/$sceneKey",
        "/game/$gameKey/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/store": {
      "filePath": "store.tsx"
    },
    "/whiteboard": {
      "filePath": "whiteboard.tsx"
    },
    "/builder/$storyKey": {
      "filePath": "builder/$storyKey.tsx"
    },
    "/builder/stories": {
      "filePath": "builder/stories.tsx"
    },
    "/library/$storyKey": {
      "filePath": "library/$storyKey.tsx"
    },
    "/library/": {
      "filePath": "library/index.tsx"
    },
    "/game/$gameKey/$sceneKey": {
      "filePath": "game/$gameKey/$sceneKey.tsx"
    },
    "/game/$gameKey/": {
      "filePath": "game/$gameKey/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
